apiVersion: v1
kind: ServiceAccount
metadata:
  name: externaldnsserviceaccount

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: externaldnsrole
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions"]
  resources: ["ingresses"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list","watch"]

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: externaldnsbind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: externaldnsrole
subjects:
- kind: ServiceAccount
  name: externaldnsserviceaccount
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: externaldnsdep
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: externaldns
  template:
    metadata:
      labels:
        app: externaldns
    spec:
      serviceAccountName: externaldnsserviceaccount
      containers:
      - name: externaldnsimage
        image: registry.opensource.zalan.do/teapot/external-dns:latest
        args:
        - --source=service
        - --source=ingress
        - --domain-filter=rayhli.com # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
        - --provider=aws
        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        - --aws-zone-type=public # only look at public hosted zones (valid values are public, private or no valuefor both)
        - --registry=txt
        - --txt-owner-id=/hostedzone/Z19KCRHJVSTTAB
      securityContext:
        fsGroup: 65534 # For ExternalDNS to be able to read Kubernetes and AWS token files
